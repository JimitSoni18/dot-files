rm history.txt
hx config.nu
sudo reboot
Hyprland 
cat .bashrc
echo $nu.config-path
$nu.config-path | hx
echo $nu.config-path | hx
echo $nu.config-path | wl-copy 
echo $nu.config-path 
hx .config/nushell/config.nu
clear
hx .config/nushell/config.nu
clear
cat .bashrc
hx .config/nushell/config.nu
zellij 
pkill Hyprland
bash
source .config/nushell/config.nu
hx .config/nushell/config.nu
clear
cd .config/nushell/
ls
hx env.nu
cat .bashrc
cd ~
cat .bashrc
cat .bashrc 
zellij 
clear
sudo reboot
clear
cd Programming/Languages/Rust/axum_server/
starship init nu | save -f ~/.cache/starship/init.nu
ls ~/.cache/starship/init.nu
cd ~/.config/nushell/
ls
hx env.nu
hx config.nu
cd Programming/Languages/Rust/axum_server/
clear
hx .
which rust-analyzer
rustup component add rust-analyzer
cd ~
cat .bashrc 
cat .bash_profile
clear
clear
which rust-analyzer
cd ~
ls
cat .bash_profile
rustup
clear
bash
clear
cat .bash_profile
cd ~
clear
cat .bash_profile
bash --help
$env
hx .config/nushell/env.nu
clear
source .config/nushell/env.nu
rustup
source .config/nushell/config.nu
rustup
cat ~/.cargo/env
cat .bash_profile
cat .bashrc
rm -rf ~/.cargo
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source .cargo/env
rustup
cargo
rustc
cd ~
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
clear
cd .config/nushell/
hx .
source config.nu
source env.nu
cd ~
clear
cargo
clear
ls .cargo/bin/
clear
cd .config/nushell/
echo $nu.env-path
echo $env.PATH
hx .
cd ~
source $nu.env-path
clear
cargo
echo $env.PATH
hx .config/nushell/env.nu
source $nu.env-path
cargo
echo $env.PATH
hx .config/nushell/env.nu
source $nu.env-path
cargo
cd Programming/Languages/Rust/axum_server/
clear
cargo watch -c -q -w src -x run
rustup
echo $env.PATH
hx .config/nushell/env.nu
cd ~
echo $nu.home-path
hx .config/nushell/env.nu
source $nu.env-path
echo $env.PATH
cd ~
source $nu.env-path
echo $env.PATH
source $nu.env-path
echo $env.PATH
hx .config/nushell/env.nu
cargo run
bash
cd ~
$env.HOME
$env.HYPRLAND_CMD
hx .config/nushell/env.nu
bash
hx .
cd Programming/Languages/Rust/axum_server/
echo $env.PATH
clear
cargo watch -q -c -w src -x run
cargo install cargo-watch
cargo watch
curl --help
cat ~/.bash_history
clea
clear
curl -H 'Content-Type: application/json' -d '{"username": "jimit", "password": "asbnjs"}' -X POST http://127.0.0.1:8080/api/login -v
curl -H 'Content-Type: application/json' -d '{"username": "jimit", "password": "bnjs"}' -X POST http://127.0.0.1:8080/api/login -v
nvim .
vim
clear
vo
vi
hx .
rustup default stable
clear
cargo watch -q -c -w src -x run
hx .
curl -H 'Content-Type: application/json' -d '{"title":"Ticket AAA"}' -X POST http://127.0.0.1:8080/api/tickets -v
curl "http://127.0.0.1:8080/api/tickets" -v
curl -H 'Content-Type: application/json' -X DELETE http://127.0.0.1:8080/api/tickets/1 -v
curl -H 'Content-Type: application/json' -d '{"title":"Ticket BBB"}' -X POST http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' -d '{"title":"Ticket CCC"}' -X POST http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' -X DELETE http://127.0.0.1:8080/api/tickets/1 -v
curl -H 'Content-Type: application/json' http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' -X DELETE http://127.0.0.1:8080/api/tickets/1 -v
curl http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' -d '{"title":"Ticket AAA"}' -X POST http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' -d '{"title":"Ticket BBB"}' -X POST http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' -d '{"title":"Ticket CCC"}' -X POST http://127.0.0.1:8080/api/tickets -v
curl -H 'Content-Type: application/json' http://127.0.0.1:8080/api/tickets -v
cd ~
ls
cd eww
git branch
git pull
cd ~/.config/nushell/
hx config.nu
hx env.nu
rustup update
rustup default nightly
cd ..
rustc -v
rustc --version
cd eww/
rustc --version
sudo xbps-install -Su
rustup default nightly
cargo build --release --no-default-features --features=wayland
clear
ls /usr/lib
clear
cargo build --release --no-default-features --features=wayland
sudo xbps-install gtk-layer-shell-devel
find / -name gtk-layer
which findf
which find
clear
find --help
htop
bash
/usr/bin/find
ip
ip a
sudo xbps-install inetutils
ifconfig 
cd ../../JS/portfolio/
npm run dev
npm run dev -host
npm run dev
cd ~/.config/hypr/
hx hyprland.conf
hx .
cargo watch -q -c -w src -x run
clear
cd ~/.config/
git status
git commit helix/ hypr/ nushell/
